{"ast":null,"code":"var _jsxFileName = \"/Users/hossein/Desktop/React Projects/signalRtester/src/content/applications/SignalRtester/SignalRContent.tsx\",\n    _s = $RefreshSig$();\n\nimport { CardHeader, Box } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useWebSokets } from 'src/hooks/useWebSokets';\nimport SendReceive from './SendReceive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignalRContent = props => {\n  _s();\n\n  const {\n    url,\n    token\n  } = props;\n  const connection = useWebSokets({\n    url,\n    token\n  });\n  const [connectionStatus, setConnectionStatus] = useState('');\n  useEffect(() => {\n    if ((connection === null || connection === void 0 ? void 0 : connection.state) === 'Disconnected') {\n      setConnectionStatus('Disconnected');\n      connection === null || connection === void 0 ? void 0 : connection.start().then(res => {\n        setConnectionStatus('Connected');\n      }).catch(err => {\n        console.log(err, 'errr');\n        setConnectionStatus('Disconnected');\n      });\n    } else {\n      setConnectionStatus('Connected');\n    }\n\n    setConnectionStatus(connection === null || connection === void 0 ? void 0 : connection.state);\n  }, [connection, url]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      style: {\n        padding: 0\n      },\n      title: connectionStatus === 'Connecting' ? 'Connected' : connectionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        marginTop: 20\n      },\n      sx: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(SendReceive, {\n        connection: connection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignalRContent, \"1UuEmacnHhZQwZ0NlegBjuGmwSQ=\", false, function () {\n  return [useWebSokets];\n});\n\n_c = SignalRContent;\nexport default SignalRContent; // JSON.stringify(connection.state)\n\nvar _c;\n\n$RefreshReg$(_c, \"SignalRContent\");","map":{"version":3,"sources":["/Users/hossein/Desktop/React Projects/signalRtester/src/content/applications/SignalRtester/SignalRContent.tsx"],"names":["CardHeader","Box","React","useEffect","useState","useWebSokets","SendReceive","SignalRContent","props","url","token","connection","connectionStatus","setConnectionStatus","state","start","then","res","catch","err","console","log","padding","marginTop","width"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,eAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAA4C;AAAA;;AACjE,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAiBF,KAAvB;AACA,QAAMG,UAAU,GAAGN,YAAY,CAAC;AAAEI,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,CAA/B;AACA,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAS,EAAT,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAAQ,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEG,KAAZ,MAAsB,cAA1B,EAA0C;AACxCD,MAAAA,mBAAmB,CAAC,cAAD,CAAnB;AACAF,MAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CACNI,KADJ,GAEGC,IAFH,CAESC,GAAD,IAAS;AACbJ,QAAAA,mBAAmB,CAAC,WAAD,CAAnB;AACD,OAJH,EAKGK,KALH,CAKUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,MAAjB;AACAN,QAAAA,mBAAmB,CAAC,cAAD,CAAnB;AACD,OARH;AASD,KAXD,MAWO;AACLA,MAAAA,mBAAmB,CAAC,WAAD,CAAnB;AACD;;AACDA,IAAAA,mBAAmB,CAACF,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEG,KAAb,CAAnB;AACD,GAhBQ,EAgBN,CAACH,UAAD,EAAaF,GAAb,CAhBM,CAAT;AAkBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAE;AAAEa,QAAAA,OAAO,EAAE;AAAX,OADT;AAEE,MAAA,KAAK,EACHV,gBAAgB,KAAK,YAArB,GAAoC,WAApC,GAAkDA;AAHtD;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAA+B,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAnC;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,UAAU,EAAEb;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApCD;;GAAMJ,c;UAEeF,Y;;;KAFfE,c;AAqCN,eAAeA,cAAf,C,CACA","sourcesContent":["import { CardHeader, Box } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useWebSokets } from 'src/hooks/useWebSokets';\nimport SendReceive from './SendReceive';\n\nconst SignalRContent = (props: { url: string; token?: string }) => {\n  const { url, token } = props;\n  const connection = useWebSokets({ url, token });\n  const [connectionStatus, setConnectionStatus] = useState<string>('');\n\n  useEffect(() => {\n    if (connection?.state === 'Disconnected') {\n      setConnectionStatus('Disconnected');\n      connection\n        ?.start()\n        .then((res) => {\n          setConnectionStatus('Connected');\n        })\n        .catch((err) => {\n          console.log(err, 'errr');\n          setConnectionStatus('Disconnected');\n        });\n    } else {\n      setConnectionStatus('Connected');\n    }\n    setConnectionStatus(connection?.state);\n  }, [connection, url]);\n\n  return (\n    <React.Fragment>\n      <CardHeader\n        style={{ padding: 0 }}\n        title={\n          connectionStatus === 'Connecting' ? 'Connected' : connectionStatus\n        }\n      />\n      <Box style={{ marginTop: 20 }} sx={{ width: '100%' }}>\n        <SendReceive connection={connection} />\n      </Box>\n    </React.Fragment>\n  );\n};\nexport default SignalRContent;\n// JSON.stringify(connection.state)\n"]},"metadata":{},"sourceType":"module"}