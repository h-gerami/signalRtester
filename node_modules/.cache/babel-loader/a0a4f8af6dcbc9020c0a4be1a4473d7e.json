{"ast":null,"code":"var _jsxFileName = \"/Users/hossein/Desktop/React Projects/signalRtester/src/content/applications/SignalRtester/ListeningResponse.tsx\",\n    _s = $RefreshSig$();\n\nimport { TextField } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListeningResponse = props => {\n  _s();\n\n  const {\n    connection,\n    method\n  } = props;\n  const [methodAnser, setMethodAnswer] = useState('');\n  useEffect(() => {\n    if ((connection === null || connection === void 0 ? void 0 : connection.state) === 'Disconnected') {\n      connection === null || connection === void 0 ? void 0 : connection.start().then(() => {\n        connection.on(method, message => {\n          setMethodAnswer(JSON.stringify(message));\n        });\n      });\n    } else {\n      connection === null || connection === void 0 ? void 0 : connection.on(method, message => {\n        setMethodAnswer(JSON.stringify(message));\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"dense\",\n      multiline: true,\n      fullWidth: true,\n      rows: 4,\n      id: \"payload\" // label=\"payload\"\n      ,\n      contentEditable: false,\n      value: methodAnser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListeningResponse, \"ML18tVi+U5Zx3WxEoSyfvHlMEYI=\");\n\n_c = ListeningResponse;\nexport default ListeningResponse;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListeningResponse\");","map":{"version":3,"sources":["/Users/hossein/Desktop/React Projects/signalRtester/src/content/applications/SignalRtester/ListeningResponse.tsx"],"names":["TextField","React","useEffect","useState","ListeningResponse","props","connection","method","methodAnser","setMethodAnswer","state","start","then","on","message","JSON","stringify"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AACA,MAAMC,iBAAiB,GAAIC,KAAD,IAAgB;AAAA;;AACxC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAyBF,KAA/B;AACA,QAAM,CAACG,WAAD,EAAcC,eAAd,IAAiCN,QAAQ,CAAS,EAAT,CAA/C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAAI,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEI,KAAZ,MAAsB,cAA1B,EAA0C;AACxCJ,MAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEK,KAAZ,GAAoBC,IAApB,CAAyB,MAAM;AAC7BN,QAAAA,UAAU,CAACO,EAAX,CAAcN,MAAd,EAAuBO,OAAD,IAAkB;AACtCL,UAAAA,eAAe,CAACM,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAD,CAAf;AACD,SAFD;AAGD,OAJD;AAKD,KAND,MAMO;AACLR,MAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEO,EAAZ,CAAeN,MAAf,EAAwBO,OAAD,IAAkB;AACvCL,QAAAA,eAAe,CAACM,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAD,CAAf;AACD,OAFD;AAGD;AACF,GAZQ,EAYN,EAZM,CAAT;AAaA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,MAAM,EAAC,OADT;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,SAAS,EAAE,IAHb;AAIE,MAAA,IAAI,EAAE,CAJR;AAKE,MAAA,EAAE,EAAC,SALL,CAME;AANF;AAOE,MAAA,eAAe,EAAE,KAPnB;AAQE,MAAA,KAAK,EAAEN;AART;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/BD;;GAAMJ,iB;;KAAAA,iB;AAgCN,eAAeA,iBAAf","sourcesContent":["import { TextField } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nconst ListeningResponse = (props: any) => {\n  const { connection, method } = props;\n  const [methodAnser, setMethodAnswer] = useState<string>('');\n\n  useEffect(() => {\n    if (connection?.state === 'Disconnected') {\n      connection?.start().then(() => {\n        connection.on(method, (message: any) => {\n          setMethodAnswer(JSON.stringify(message));\n        });\n      });\n    } else {\n      connection?.on(method, (message: any) => {\n        setMethodAnswer(JSON.stringify(message));\n      });\n    }\n  }, []);\n  return (\n    <React.Fragment>\n      <TextField\n        margin=\"dense\"\n        multiline\n        fullWidth={true}\n        rows={4}\n        id=\"payload\"\n        // label=\"payload\"\n        contentEditable={false}\n        value={methodAnser}\n      />\n    </React.Fragment>\n  );\n};\nexport default ListeningResponse;\n"]},"metadata":{},"sourceType":"module"}